# people who have contributed to the glossary definitions written here
contributors:
  - doaks

# general IRC terms
irc-terms:
  "Operator":
    description: |
      This term can refer to either an <a href="#irc-operator">IRC Operator</a> or a <a href="#channel-operator">Channel Operator</a>. Knowing those two terms helps figure out which is being used with context.

  "Oper":
    description: |
      Short for <a href="#operator">Operator</a>, but typically means an <a href="#irc-operator">IRC Operator</a> on its own because of the <a href="../commands/oper"><tt>OPER</tt></a> command.

  "IRC Operator":
    description: |
      User who administrates one or more servers on an IRC network. May also be referred to as a "Network Operator" or "Server Operator".
  
  "Server Operator":
    description: |
      Another name for an <a href="#irc-operator">IRC Operator</a>, but typically refers to a user who's in charge of one specific server on the network.

  "Network Operator":
    description: |
      Another name for an <a href="#irc-operator">IRC Operator</a>, but typically refers to a user who does administrates across the network, on multiple servers. Sometimes also called a NetAdmin or "Network Admin".

  "Channel Operator":
    description: |
      User who administrates a <a href="#channel">channel</a>.

  "Channel":
    description: |
      Room where one or more users can talk with each other.
  
  "Oper-up":
    description: |
      When a regular user authenticates and becomes an <a href="#irc-operator">IRC Operator</a>, they have 'opered-up'. Sometimes also called "opering", or "opering-up".
  
  "Connection registration":
    description: |
      This describes the period from when a user connects, to when the `RPL_WELCOME` `(001)` numeric and burst is sent to them. In other words, it begins when they connect and finishes when they are fully connected to the server and can use all regular commands.

      'Registration' here **does not** refer to IRC account registration (such as through NickServ). Here, 'registration' means the user connecting to the server and setting their initial details (nickname, ident, capabilities, etc).

      During the connection registration period, most commands cannot be used, and certain commands act differently.

  "Connection registration burst":
    description: |
      This 'burst' is sent by the server to a client when that client successfully connects to the network (when they finish connection registration). The connection registration burst includes the `001â€“005` numerics, a `LUSERS` response, the `RPL_UMODEIS` response if modes are set, any other numerics and responses deemed necessary by the server, and finishes with an `MOTD` response.
  
  "Rank":
    description: |
      This refers to how privileged you are in a given channel. For example, having a rank of channel op means that you get the rank prefix `@`. This may also be called prefix, status, and a few other terms depending on who you talk to, but we prefer this term.

  "Halfop":
    description: |
      Short for 'half-operator', this is a rank halfway between an unprivlidged user and a <a href="#channel-operator">channel operator</a>, with a mix of privlidges that differs depending on the server software in use.

  # "Prefix":
  #   description: |
  #     This can mean either the character before someone's name in a channel (e.g. `@`/`+`), or the first part of the IRC message framing (prefixed by a colon).

# terms used in irc software development
irc-dev-terms:
  # "Friends":
  #   description: |
  #     Server software sometimes has to send messages to all clients that a given user is in channels with. This group of users can be called that client's 'friends'.
      
  #     For example, if the `dan` and `jeff` clients are joined to `#chan1`, and `dan` and `tiff` are joined to `#chan2`, then in protocol terms the `jeff` and `tiff` clients are the `dan` client's 'friends'.

  "Silent Command":
    description: |
      We use the term 'silent command' to mean that the command, if successful, sends no response to the user. For example, the `NICK` command, when used during connection registration, is a silent command because it sends no response when successful.
